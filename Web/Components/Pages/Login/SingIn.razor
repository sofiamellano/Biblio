@page "/signin"
@inject SweetAlertService sweetAlert
@inject FirebaseAuthService firebaseAuthService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<div class="auth-wrapper">
    <div class="card register-card shadow-lg border-0 rounded-4">
        <div class="card-header bg-gradient-primary text-white border-0 rounded-top-4 py-3">
            <div class="d-flex align-items-center">
                <span class="me-2 fs-4">📝</span>
                <div>
                    <h5 class="mb-0 fw-semibold">Crear cuenta</h5>
                    <small class="opacity-75">Regístrate para continuar</small>
                </div>
            </div>
        </div>

        <div class="card-body p-4 p-md-5">
            <div class="mb-3">
                <label class="form-label fw-semibold" for="Nombre">Nombre</label>
                <div class="input-group input-group-lg">
                    <span class="input-group-text bg-light-subtle">
                        <i class="bi bi-person"></i>
                    </span>
                    <InputText id="Nombre" class="form-control" @bind-Value="name" placeholder="Nombre y apellido" />
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold" for="email">Email</label>
                <div class="input-group input-group-lg">
                    <span class="input-group-text bg-light-subtle">
                        <i class="bi bi-envelope"></i>
                    </span>
                    <InputText id="email" class="form-control" @bind-Value="email" placeholder="usuario@gmail.com" type="email" autocomplete="email" />
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold" for="password">Contraseña</label>
                <div class="input-group input-group-lg">
                    <span class="input-group-text bg-light-subtle">
                        <i class="bi bi-lock"></i>
                    </span>
                    <InputText id="password" class="form-control" @bind-Value="password" placeholder="••••••••" type="@(_showPassword ? "text" : "password")" autocomplete="new-password" />
                    <button type="button" class="btn btn-outline-secondary" @onclick="() => _showPassword = !_showPassword">
                        <i class="bi @( _showPassword ? "bi-eye-slash" : "bi-eye")"></i>
                    </button>
                </div>
            </div>

            <div class="mb-4">
                <label class="form-label fw-semibold" for="passwordverify">Verificar contraseña</label>
                <div class="input-group input-group-lg">
                    <span class="input-group-text bg-light-subtle">
                        <i class="bi bi-shield-lock"></i>
                    </span>
                    <InputText id="passwordverify" class="form-control" @bind-Value="passwordverify" placeholder="Repite tu contraseña" type="@(_showPasswordVerify ? "text" : "password")" autocomplete="new-password" />
                    <button type="button" class="btn btn-outline-secondary" @onclick="() => _showPasswordVerify = !_showPasswordVerify">
                        <i class="bi @( _showPasswordVerify ? "bi-eye-slash" : "bi-eye")"></i>
                    </button>
                </div>
            </div>

            <button type="button" class="btn btn-gradient w-100 mb-2" @onclick="Register" disabled="@_isSubmitting">
                @if (_isSubmitting)
                {
                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                }
                <i class="bi bi-person-check me-1"></i> Enviar
            </button>

            <div class="text-center mt-2">
                <small class="text-muted">¿Ya tienes cuenta?
                    <a class="text-decoration-none" href="/login">Inicia sesión</a>
                </small>
            </div>
        </div>

        <div class="card-footer text-body-secondary text-center small">
            Biblio
        </div>
    </div>
</div>

@code {
    string name = string.Empty;
    string email = string.Empty;
    string password = string.Empty;
    string passwordverify = string.Empty;

    bool _showPassword = false;
    bool _showPasswordVerify = false;
    bool _isSubmitting = false;

    private async Task Register()
    {
        if (string.IsNullOrWhiteSpace(name) || string.IsNullOrWhiteSpace(email) ||
            string.IsNullOrWhiteSpace(password) || string.IsNullOrWhiteSpace(passwordverify))
        {
            await sweetAlert.FireAsync("Error", "Por favor, complete todos los campos.", SweetAlertIcon.Error);
            return;
        }
        if (password != passwordverify)
        {
            await sweetAlert.FireAsync("Error", "Las contraseñas no coinciden.", SweetAlertIcon.Error);
            return;
        }

        _isSubmitting = true;
        try
        {
            var result = await firebaseAuthService.createUserWithEmailAndPassword(email, password, name);
            if (result != null)
            {
                await sweetAlert.FireAsync("Éxito", "Usuario registrado correctamente. Revisa tu correo para verificar la cuenta.", SweetAlertIcon.Success);
                name = string.Empty;
                email = string.Empty;
                password = string.Empty;
                passwordverify = string.Empty;
                navigationManager.NavigateTo("/login");
            }
            else
            {
                await sweetAlert.FireAsync("Error", "Error al registrar el usuario", SweetAlertIcon.Error);
            }
        }
        finally
        {
            _isSubmitting = false;
        }
    }
}