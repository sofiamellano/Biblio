@page "/login"
@inject FirebaseAuthService _firebaseAuthService
@inject SweetAlertService _sweetAlert
@inject NavigationManager _navigationManager
@rendermode InteractiveServer

@if (!isAuthenticated)
{
    <div class="auth-wrapper">
        <div class="card login-card shadow-lg border-0 rounded-4">
            <div class="card-header bg-gradient-primary text-white border-0 rounded-top-4 py-3">
                <div class="d-flex align-items-center">
                    <span class="me-2 fs-4">🔐</span>
                    <div>
                        <h5 class="mb-0 fw-semibold">Iniciar sesión</h5>
                        <small class="opacity-75">Bienvenido a Biblio</small>
                    </div>
                </div>
            </div>

            <div class="card-body p-4 p-md-5">
                <div class="mb-3">
                    <label class="form-label fw-semibold">Correo electrónico</label>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-light-subtle">
                            <i class="bi bi-envelope"></i>
                        </span>
                        <InputText class="form-control" @bind-Value="email" placeholder="usuario@gmail.com" autocomplete="email" />
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Contraseña</label>
                    <div class="input-group input-group-lg">
                        <span class="input-group-text bg-light-subtle">
                            <i class="bi bi-lock"></i>
                        </span>
                        <InputText class="form-control" @bind-Value="password" placeholder="••••••••" type="password" autocomplete="current-password" />
                    </div>
                </div>

                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div class="form-check">
                        <InputCheckbox id="rememberMe" class="form-check-input" @bind-Value="rememberPassword" />
                        <label class="form-check-label ms-1" for="rememberMe">Recordar contraseña</label>
                    </div>
                    <small>
                        <NavLink class="text-muted text-decoration-none" @onclick="RecoveryPassword">
                            <i class="bi bi-question-circle me-1"></i> ¿Olvidaste tu contraseña?
                        </NavLink>
                    </small>
                </div>

                <button class="btn btn-gradient w-100 mb-3" @onclick="Loguear">
                    <i class="bi bi-box-arrow-in-right me-1"></i> Acceder
                </button>

                <div class="d-grid gap-2 d-md-flex justify-content-md-between">
                    <button class="btn btn-outline-secondary" @onclick="RegisterMe">
                        <i class="bi bi-person-plus me-1"></i> Registrarme
                    </button>
                    <button class="btn btn-outline-danger" @onclick="LoginWithGoogle">
                        <i class="bi bi-google me-1"></i> Google
                    </button>
                </div>
            </div>

            <div class="card-footer text-body-secondary text-center small">
                Desarrollo 3er año - TSDS - 2025
            </div>
        </div>
    </div>
}
else
{
    <div class="auth-wrapper">
        <div class="card login-card shadow-lg border-0 rounded-4 text-center">
            <div class="card-header bg-gradient-primary text-white border-0 rounded-top-4 py-3">
                <div class="d-flex align-items-center justify-content-center">
                    <span class="me-2 fs-4">🔓</span>
                    <div>
                        <h5 class="mb-0 fw-semibold">Cerrar sesión</h5>
                        <small class="opacity-75">Cerrar sesión de Biblio</small>
                    </div>
                </div>
            </div>

            <div class="card-body p-4 p-md-5">
                <p class="mb-4 text-muted">¿Deseas finalizar tu sesión?</p>
                <button class="btn btn-gradient" @onclick="Desloguear">
                    <i class="bi bi-box-arrow-right me-1"></i> Cerrar sesión
                </button>
            </div>

            <div class="card-footer text-body-secondary text-center small">
                Desarrollo 3er año - TSDS - 2025
            </div>
        </div>
    </div>
}

@code {
    bool isAuthenticated = false;
    string email = string.Empty;
    string password = string.Empty;
    bool rememberPassword = false;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await _firebaseAuthService.IsUserAuthenticated();
            StateHasChanged();
        }
    }

    private async Task Loguear()
    {
        try
        {
            Console.WriteLine("Loguear llamado");
            var user = await _firebaseAuthService.SignInWithEmailPassword(email, password, rememberPassword);
            if (user != null)
            {
                if(user.EmailVerified == false)
                {
                    await _sweetAlert.FireAsync("Verificación de correo", "Por favor, verifica tu correo electrónico antes de iniciar sesión.", SweetAlertIcon.Warning);
                    return;
                }
                isAuthenticated = true;
                await _firebaseAuthService.IsUserAuthenticated();
                StateHasChanged();
                
            }
            else
            {
                await _sweetAlert.FireAsync("Error de autenticación", "Correo o contraseña incorrectos.", SweetAlertIcon.Error);
            }
        }
        catch (Exception ex)
        {
            await _sweetAlert.FireAsync("Error", ex.Message, SweetAlertIcon.Error);
        }
        
    }

    private async Task Desloguear()
    {
        isAuthenticated = false;
        email = string.Empty;
        password = string.Empty;
        await _firebaseAuthService.SignOut();
        StateHasChanged();
    }

    private async Task RegisterMe()
    {
        _navigationManager.NavigateTo("/signin");
        
    }
    private async Task LoginWithGoogle()
    {
        var user = await _firebaseAuthService.LoginWithGoogle();
        if (user != null)
        {
            isAuthenticated = true;
            await _firebaseAuthService.IsUserAuthenticated();
            StateHasChanged();
        }
        else
        {
            await _sweetAlert.FireAsync("Error de autenticación", "No se pudo iniciar sesión con Google.", SweetAlertIcon.Error);
        }
    }
    private void RecoveryPassword()
    {
        _navigationManager.NavigateTo("/recovery");
    }

}