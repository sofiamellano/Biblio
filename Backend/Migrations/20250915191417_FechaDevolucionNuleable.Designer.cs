// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BiblioContext))]
    [Migration("20250915191417_FechaDevolucionNuleable")]
    partial class FechaDevolucionNuleable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Service.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Gabriel García Márquez"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Isabel Allende"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Mario Vargas Llosa"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Jorge Luis Borges"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Pablo Neruda"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Julio Cortázar"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Laura Esquivel"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Carlos Fuentes"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Miguel de Cervantes"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Federico García Lorca"
                        });
                });

            modelBuilder.Entity("Service.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Profesorado de Educación Inicial"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "Profesorado de Educ. Secundaria en Cs de la Administración"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Profesorado de Educ. Secundaria en Economía"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Profesorado de Educación Tecnológica"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Técnico Superior en Desarrollo de Software"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Técnico Superior en Enfermería"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Tecnicatura Superior en Gestión de Energías Renovables"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Técnico Superior en Gestión de las Organizaciones"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Técnico Superior en Soporte de Infraestructura en Tecnologías de la Información"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Licenciatura en Cooperativismo y Mutualismo"
                        });
                });

            modelBuilder.Entity("Service.Models.Editorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Editoriales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Penguin Random House"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "HarperCollins"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Simon & Schuster"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Hachette Book Group"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Macmillan Publishers"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Scholastic"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Bloomsbury Publishing"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Oxford University Press"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Cambridge University Press"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Wiley"
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LibroId");

                    b.ToTable("Ejemplares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            Disponible = true,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            Disponible = false,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            Disponible = false,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            Disponible = true,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            Disponible = false,
                            Estado = 1,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            Disponible = true,
                            Estado = 2,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            Disponible = true,
                            Estado = 0,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Nombre = "Ficción"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Nombre = "No Ficción"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Nombre = "Misterio"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Nombre = "Ciencia Ficción"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Nombre = "Fantasía"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Nombre = "Romance"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Nombre = "Terror"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Nombre = "Aventura"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Nombre = "Historia"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Nombre = "Biografía"
                        });
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EditorialId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Paginas")
                        .HasColumnType("int");

                    b.Property<string>("Portada")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EditorialId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnioPublicacion = 1967,
                            Descripcion = "",
                            EditorialId = 1,
                            IsDeleted = false,
                            Paginas = 417,
                            Portada = "",
                            Sinopsis = "La historia de la familia Buendía en Macondo.",
                            Titulo = "Cien años de soledad"
                        },
                        new
                        {
                            Id = 2,
                            AnioPublicacion = 1982,
                            Descripcion = "",
                            EditorialId = 2,
                            IsDeleted = false,
                            Paginas = 368,
                            Portada = "",
                            Sinopsis = "Saga familiar con elementos mágicos.",
                            Titulo = "La casa de los espíritus"
                        },
                        new
                        {
                            Id = 3,
                            AnioPublicacion = 1963,
                            Descripcion = "",
                            EditorialId = 3,
                            IsDeleted = false,
                            Paginas = 336,
                            Portada = "",
                            Sinopsis = "La vida en un colegio militar peruano.",
                            Titulo = "La ciudad y los perros"
                        },
                        new
                        {
                            Id = 4,
                            AnioPublicacion = 1944,
                            Descripcion = "",
                            EditorialId = 4,
                            IsDeleted = false,
                            Paginas = 224,
                            Portada = "",
                            Sinopsis = "Relatos fantásticos y filosóficos.",
                            Titulo = "Ficciones"
                        },
                        new
                        {
                            Id = 5,
                            AnioPublicacion = 1924,
                            Descripcion = "",
                            EditorialId = 5,
                            IsDeleted = false,
                            Paginas = 80,
                            Portada = "",
                            Sinopsis = "Colección de poemas románticos.",
                            Titulo = "Veinte poemas de amor y una canción desesperada"
                        },
                        new
                        {
                            Id = 6,
                            AnioPublicacion = 1963,
                            Descripcion = "",
                            EditorialId = 6,
                            IsDeleted = false,
                            Paginas = 608,
                            Portada = "",
                            Sinopsis = "Novela experimental sobre la vida y el amor.",
                            Titulo = "Rayuela"
                        },
                        new
                        {
                            Id = 7,
                            AnioPublicacion = 1989,
                            Descripcion = "",
                            EditorialId = 7,
                            IsDeleted = false,
                            Paginas = 256,
                            Portada = "",
                            Sinopsis = "Historia de amor y cocina en México.",
                            Titulo = "Como agua para chocolate"
                        },
                        new
                        {
                            Id = 8,
                            AnioPublicacion = 1975,
                            Descripcion = "",
                            EditorialId = 8,
                            IsDeleted = false,
                            Paginas = 800,
                            Portada = "",
                            Sinopsis = "Novela histórica y fantástica.",
                            Titulo = "Terra Nostra"
                        },
                        new
                        {
                            Id = 9,
                            AnioPublicacion = 1605,
                            Descripcion = "",
                            EditorialId = 9,
                            IsDeleted = false,
                            Paginas = 863,
                            Portada = "",
                            Sinopsis = "Las aventuras del ingenioso hidalgo.",
                            Titulo = "Don Quijote de la Mancha"
                        },
                        new
                        {
                            Id = 10,
                            AnioPublicacion = 1933,
                            Descripcion = "",
                            EditorialId = 10,
                            IsDeleted = false,
                            Paginas = 96,
                            Portada = "",
                            Sinopsis = "Tragedia teatral sobre el destino.",
                            Titulo = "Bodas de sangre"
                        });
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AutorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroAutores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AutorId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            AutorId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            AutorId = 3,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            AutorId = 4,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            AutorId = 5,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            AutorId = 6,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            AutorId = 7,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            AutorId = 8,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            AutorId = 9,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            AutorId = 10,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.HasIndex("LibroId");

                    b.ToTable("LibroGeneros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GeneroId = 1,
                            IsDeleted = false,
                            LibroId = 1
                        },
                        new
                        {
                            Id = 2,
                            GeneroId = 2,
                            IsDeleted = false,
                            LibroId = 2
                        },
                        new
                        {
                            Id = 3,
                            GeneroId = 3,
                            IsDeleted = false,
                            LibroId = 3
                        },
                        new
                        {
                            Id = 4,
                            GeneroId = 4,
                            IsDeleted = false,
                            LibroId = 4
                        },
                        new
                        {
                            Id = 5,
                            GeneroId = 5,
                            IsDeleted = false,
                            LibroId = 5
                        },
                        new
                        {
                            Id = 6,
                            GeneroId = 6,
                            IsDeleted = false,
                            LibroId = 6
                        },
                        new
                        {
                            Id = 7,
                            GeneroId = 7,
                            IsDeleted = false,
                            LibroId = 7
                        },
                        new
                        {
                            Id = 8,
                            GeneroId = 8,
                            IsDeleted = false,
                            LibroId = 8
                        },
                        new
                        {
                            Id = 9,
                            GeneroId = 9,
                            IsDeleted = false,
                            LibroId = 9
                        },
                        new
                        {
                            Id = 10,
                            GeneroId = 10,
                            IsDeleted = false,
                            LibroId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EjemplarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaPrestamo")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EjemplarId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prestamos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EjemplarId = 1,
                            FechaDevolucion = new DateTime(2025, 9, 12, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9765),
                            FechaPrestamo = new DateTime(2025, 9, 5, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9757),
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            EjemplarId = 2,
                            FechaDevolucion = new DateTime(2025, 9, 13, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9769),
                            FechaPrestamo = new DateTime(2025, 9, 6, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9769),
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            EjemplarId = 3,
                            FechaDevolucion = new DateTime(2025, 9, 14, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9771),
                            FechaPrestamo = new DateTime(2025, 9, 7, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9771),
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            EjemplarId = 4,
                            FechaDevolucion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9773),
                            FechaPrestamo = new DateTime(2025, 9, 8, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9773),
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            EjemplarId = 5,
                            FechaDevolucion = new DateTime(2025, 9, 16, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9775),
                            FechaPrestamo = new DateTime(2025, 9, 9, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9775),
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            EjemplarId = 6,
                            FechaDevolucion = new DateTime(2025, 9, 17, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9778),
                            FechaPrestamo = new DateTime(2025, 9, 10, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9777),
                            IsDeleted = false,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            EjemplarId = 7,
                            FechaDevolucion = new DateTime(2025, 9, 18, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9780),
                            FechaPrestamo = new DateTime(2025, 9, 11, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9780),
                            IsDeleted = false,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            EjemplarId = 8,
                            FechaDevolucion = new DateTime(2025, 9, 19, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9783),
                            FechaPrestamo = new DateTime(2025, 9, 12, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9782),
                            IsDeleted = false,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            EjemplarId = 9,
                            FechaDevolucion = new DateTime(2025, 9, 20, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9832),
                            FechaPrestamo = new DateTime(2025, 9, 13, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9831),
                            IsDeleted = false,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            EjemplarId = 10,
                            FechaDevolucion = new DateTime(2025, 9, 21, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9834),
                            FechaPrestamo = new DateTime(2025, 9, 14, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9834),
                            IsDeleted = false,
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaRegistracion")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoRol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dni = "11111111",
                            Domicilio = "Calle 1",
                            Email = "juan1@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9702),
                            IsDeleted = false,
                            Nombre = "Juan Pérez",
                            Observacion = "",
                            Password = "pass1",
                            Telefono = "111111111",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 2,
                            Dni = "22222222",
                            Domicilio = "Calle 2",
                            Email = "ana2@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9706),
                            IsDeleted = false,
                            Nombre = "Ana Gómez",
                            Observacion = "",
                            Password = "pass2",
                            Telefono = "222222222",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 3,
                            Dni = "33333333",
                            Domicilio = "Calle 3",
                            Email = "luis3@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9707),
                            IsDeleted = false,
                            Nombre = "Luis Martínez",
                            Observacion = "",
                            Password = "pass3",
                            Telefono = "333333333",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 4,
                            Dni = "44444444",
                            Domicilio = "Calle 4",
                            Email = "maria4@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9709),
                            IsDeleted = false,
                            Nombre = "María López",
                            Observacion = "",
                            Password = "pass4",
                            Telefono = "444444444",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 5,
                            Dni = "55555555",
                            Domicilio = "Calle 5",
                            Email = "carlos5@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9711),
                            IsDeleted = false,
                            Nombre = "Carlos Ruiz",
                            Observacion = "",
                            Password = "pass5",
                            Telefono = "555555555",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 6,
                            Dni = "66666666",
                            Domicilio = "Calle 6",
                            Email = "sofia6@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9712),
                            IsDeleted = false,
                            Nombre = "Sofía Torres",
                            Observacion = "",
                            Password = "pass6",
                            Telefono = "666666666",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 7,
                            Dni = "77777777",
                            Domicilio = "Calle 7",
                            Email = "miguel7@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9714),
                            IsDeleted = false,
                            Nombre = "Miguel Castro",
                            Observacion = "",
                            Password = "pass7",
                            Telefono = "777777777",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 8,
                            Dni = "88888888",
                            Domicilio = "Calle 8",
                            Email = "lucia8@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9716),
                            IsDeleted = false,
                            Nombre = "Lucía Fernández",
                            Observacion = "",
                            Password = "pass8",
                            Telefono = "888888888",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 9,
                            Dni = "99999999",
                            Domicilio = "Calle 9",
                            Email = "pedro9@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9717),
                            IsDeleted = false,
                            Nombre = "Pedro Sánchez",
                            Observacion = "",
                            Password = "pass9",
                            Telefono = "999999999",
                            TipoRol = 0
                        },
                        new
                        {
                            Id = 10,
                            Dni = "10101010",
                            Domicilio = "Calle 10",
                            Email = "valentina10@mail.com",
                            FechaRegistracion = new DateTime(2025, 9, 15, 16, 14, 16, 624, DateTimeKind.Local).AddTicks(9719),
                            IsDeleted = false,
                            Nombre = "Valentina Romero",
                            Observacion = "",
                            Password = "pass10",
                            Telefono = "101010101",
                            TipoRol = 0
                        });
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarreraId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarreraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCarreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarreraId = 1,
                            IsDeleted = false,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            CarreraId = 2,
                            IsDeleted = false,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 3,
                            CarreraId = 3,
                            IsDeleted = false,
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 4,
                            CarreraId = 4,
                            IsDeleted = false,
                            UsuarioId = 4
                        },
                        new
                        {
                            Id = 5,
                            CarreraId = 5,
                            IsDeleted = false,
                            UsuarioId = 5
                        },
                        new
                        {
                            Id = 6,
                            CarreraId = 6,
                            IsDeleted = false,
                            UsuarioId = 6
                        },
                        new
                        {
                            Id = 7,
                            CarreraId = 7,
                            IsDeleted = false,
                            UsuarioId = 7
                        },
                        new
                        {
                            Id = 8,
                            CarreraId = 8,
                            IsDeleted = false,
                            UsuarioId = 8
                        },
                        new
                        {
                            Id = 9,
                            CarreraId = 9,
                            IsDeleted = false,
                            UsuarioId = 9
                        },
                        new
                        {
                            Id = 10,
                            CarreraId = 10,
                            IsDeleted = false,
                            UsuarioId = 10
                        });
                });

            modelBuilder.Entity("Service.Models.Ejemplar", b =>
                {
                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Libro", b =>
                {
                    b.HasOne("Service.Models.Editorial", "Editorial")
                        .WithMany()
                        .HasForeignKey("EditorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editorial");
                });

            modelBuilder.Entity("Service.Models.LibroAutor", b =>
                {
                    b.HasOne("Service.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.LibroGenero", b =>
                {
                    b.HasOne("Service.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("LibroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("Service.Models.Prestamo", b =>
                {
                    b.HasOne("Service.Models.Ejemplar", "Ejemplar")
                        .WithMany()
                        .HasForeignKey("EjemplarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejemplar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Service.Models.UsuarioCarrera", b =>
                {
                    b.HasOne("Service.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("CarreraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Service.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
